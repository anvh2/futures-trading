version: '3.7'

volumes:
    prometheus_data: {}
    grafana_data: {}

networks:
  front-tier:
  back-tier:

services:
  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.36.2
    volumes:
      - ./monitor/prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    # links:
      # - cadvisor:cadvisor
      # - alertmanager:alertmanager
#      - pushgateway:pushgateway
    # depends_on:
    #   - cadvisor
#      - pushgateway
    networks:
      - back-tier
    restart: always
#    deploy:
#      placement:
#        constraints:
#          - node.hostname == ${HOSTNAME}

  node-exporter:
    container_name: node-exporter
    image: quay.io/prometheus/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /etc:/host/etc:ro
    command: 
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - back-tier
    restart: always
    deploy:
      mode: global

#   alertmanager:
#     container_name: alertmanager
#     image: prom/alertmanager
#     ports:
#       - 9093:9093
#     volumes:
#       - ./alertmanager/:/etc/alertmanager/
#     networks:
#       - back-tier
#     restart: always
#     command:
#       - '--config.file=/etc/alertmanager/config.yml'
#       - '--storage.path=/alertmanager'
# #    deploy:
# #      placement:
# #        constraints:
# #          - node.hostname == ${HOSTNAME}
  # cadvisor:
  #   container_name: cadvisor
  #   image: gcr.io/cadvisor/cadvisor
  #   volumes:
  #     - /:/rootfs:ro
  #     - /var/run:/var/run:rw
  #     - /sys:/sys:ro
  #     - /var/lib/docker/:/var/lib/docker:ro
  #   ports:
  #     - 8080:8080
  #   networks:
  #     - back-tier
  #   restart: always
  #   deploy:
  #     mode: global

  grafana:
    container_name: grafana
    image: grafana/grafana
    user: "472"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitor/grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./monitor/grafana/config.monitoring
    networks:
      - back-tier
      - front-tier
    restart: always

  futures-trading:
    container_name: futures-trading
    build:
      context: .
      args:
        - VERSION=v1.0.1
      dockerfile: ./Dockerfile
    image: anvh2/futures-trading:v1.0.1
    volumes:
      - "./logs:/logs"
    ports:
      - "8000:8080"
    networks:
      - back-tier
      - front-tier
    restart: always

#  pushgateway:
#    container_name: pushgateway
#    image: prom/pushgateway
#    restart: always
#    expose:
#      - 9091
#    ports:
#      - "9091:9091"
#    networks:
#      - back-tier